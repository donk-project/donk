// Generated by Donk Transpiler. Changes may be overwritten.
// Template:    transformer_definition_cc.tmpl
// Filename:    datum/atom/movable.cc
#include "donk/api/datum/atom/movable.h"

#include "donk/api/datum/atom.h"
#include "donk/core/iota.h"
#include "donk/core/path.h"
#include "donk/core/procs.h"

namespace donk::api::datum::atom::movable {
movable_coretype::movable_coretype(donk::path_t path)
    : donk::iota_t(path), donk::api::datum::atom::atom_coretype(path) {
  InternalCoreRegister();
}

donk::running_proc Bump(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/datum/atom/movable/proc/Bump");
}

donk::running_proc Move(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/datum/atom/movable/proc/Move");
}

void movable_coretype::InternalCoreRegister() {
  RegisterProc("Bump", donk::api::datum::atom::movable::Bump);
  RegisterProc("Move", donk::api::datum::atom::movable::Move);
  donk::var_t donk_value_var__animate_movement = 1;
  RegisterVar("animate_movement", donk_value_var__animate_movement);
  donk::var_t donk_value_var__bound_height = 32;
  RegisterVar("bound_height", donk_value_var__bound_height);
  donk::var_t donk_value_var__bound_width = 32;
  RegisterVar("bound_width", donk_value_var__bound_width);
  donk::var_t donk_value_var__bound_x = 0;
  RegisterVar("bound_x", donk_value_var__bound_x);
  donk::var_t donk_value_var__bound_y = 0;
  RegisterVar("bound_y", donk_value_var__bound_y);
  donk::var_t donk_value_var__glide_size = 0;
  RegisterVar("glide_size", donk_value_var__glide_size);
  RegisterVar("locs");
  RegisterVar("particles");
  RegisterVar("screen_loc");
  donk::var_t donk_value_var__step_size = 32;
  RegisterVar("step_size", donk_value_var__step_size);
  donk::var_t donk_value_var__step_x = 0;
  RegisterVar("step_x", donk_value_var__step_x);
  donk::var_t donk_value_var__step_y = 0;
  RegisterVar("step_y", donk_value_var__step_y);
  RegisterVar("vis_contents");
  RegisterVar("vis_locs");
}

}  // namespace donk::api::datum::atom::movable