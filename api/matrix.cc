// Generated by Donk Transpiler. Changes may be overwritten.
// Template:    transformer_definition_cc.tmpl
// Filename:    matrix.cc
#include "donk/api/matrix.h"

#include "donk/core/iota.h"
#include "donk/core/path.h"
#include "donk/core/procs.h"

namespace donk::api::matrix {
matrix_coretype::matrix_coretype(donk::path_t path) : donk::iota_t(path) {
  InternalCoreRegister();
}

donk::running_proc Add(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/matrix/proc/Add");
}

donk::running_proc Interpolate(donk::proc_ctxt_t& ctxt,
                               donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/matrix/proc/Interpolate");
}

donk::running_proc Invert(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/matrix/proc/Invert");
}

donk::running_proc Multiply(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/matrix/proc/Multiply");
}

donk::running_proc New(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/matrix/proc/New");
}

donk::running_proc Scale(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/matrix/proc/Scale");
}

donk::running_proc Subtract(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/matrix/proc/Subtract");
}

donk::running_proc Translate(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/matrix/proc/Translate");
}

donk::running_proc Turn(donk::proc_ctxt_t& ctxt, donk::proc_args_t& args) {
  co_yield ctxt.Unimplemented("/matrix/proc/Turn");
}

void matrix_coretype::InternalCoreRegister() {
  RegisterProc("Add", donk::api::matrix::Add);
  RegisterProc("Interpolate", donk::api::matrix::Interpolate);
  RegisterProc("Invert", donk::api::matrix::Invert);
  RegisterProc("Multiply", donk::api::matrix::Multiply);
  RegisterProc("New", donk::api::matrix::New);
  RegisterProc("Scale", donk::api::matrix::Scale);
  RegisterProc("Subtract", donk::api::matrix::Subtract);
  RegisterProc("Translate", donk::api::matrix::Translate);
  RegisterProc("Turn", donk::api::matrix::Turn);
  RegisterVar("a");
  RegisterVar("b");
  RegisterVar("c");
  RegisterVar("d");
  RegisterVar("e");
  RegisterVar("f");
}

}  // namespace donk::api::matrix