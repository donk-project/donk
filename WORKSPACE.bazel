# Donk Project
# Copyright (c) 2021 Warriorstar Orion <orion@snowfrost.garden>
# SPDX-License-Identifier: MIT
workspace(name = "donk")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "wso_third_party_buildfiles",
    sha256 = "afe108f856a19e78d505157e4762a329d798b9c8431651e49ca347cfbc404893",
    strip_prefix = "third_party_buildfiles-67088aa41875b875d3ded9e38cdd6171c7da2c73",
    urls = [
        "https://github.com/warriorstar-orion/third_party_buildfiles/archive/67088aa41875b875d3ded9e38cdd6171c7da2c73.tar.gz",
    ],
)

load("@wso_third_party_buildfiles//:deps.bzl", "wso_deps")

wso_deps()

# @dtpo is the representation of any transpiled codebase. Assuming this
# workspace is in the path root/donk/interpreter, the 'path' argument below
# assumes that the transpiled codebase is in root/dtpo, but this can be changed
# to any absolute path where the transpiled code was output to.
new_local_repository(
    name = "dtpo",
    build_file_content = """
# Donk Project
# Copyright (c) 2021 Warriorstar Orion <orion@snowfrost.garden>
# SPDX-License-Identifier: MIT
load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "dtpo",
    srcs = glob(["**/*.cc"]),
    hdrs = glob(["**/*.h"]),
    copts = select({
        # TODO: Find appropriate strictness flags for MSVC
        "@donk//:windows": [
            "/await",
            "/analyze:WX-",
            "/analyze:max_paths 512",
            "/std:c++17",
        ],
        "@donk//:darwin": [
            "-Wall",
            "-Wextra",
            "-Wfloat-equal",
            "-Wundef",
            "-Wcast-align",
            "-Wwrite-strings",
            "-Wmissing-declarations",
            "-Wredundant-decls",
            "-Wshadow",
            "-Woverloaded-virtual",
            "-std=c++2a",
            "-fcoroutines-ts",
        ],
    }),
    includes = [
        "dtpo",
    ]
    visibility = ["//visibility:public"],
    deps = [
        "@donk//api",
        "@donk//core",
        "@donk//interpreter",
        "@spdlog",
    ],
)

filegroup(
    name = "data",
    srcs = glob([
        "*.dm*",
    ]),
    visibility = ["//visibility:public"],
)
""",
    path = "../../dtpo",
)
